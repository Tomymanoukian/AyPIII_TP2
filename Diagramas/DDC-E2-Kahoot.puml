@startuml

skinparam classAttributeIconSize 0
skinparam shadowing false
hide circle

class Jugador {
    -nombre
    -puntos
    +modificarPuntos (unPuntaje)
}

class Kahoot {
    +agregarExclusividadJugador1(unaExclusividad)
    +agregarExclusividadJugador2(unaExclusividad)
    +agregarMultiplicadorJugador1(unaExclusividad)
    +agregarMultiplicadorJugador2(unaExclusividad)
    +evaluarRespuestas(unaPregunta)
    +getPuntajeJugador1()
    +getPuntajeJugador2()
}

abstract class Pregunta {
    -consigna
    {abstract}+evaluarRespuestaPara(unasRespuestas, unJugador)
}

class BonusDePuntaje {
    +{static}aplicarBonus (puntajeJ1, multiplicadoresJ1, exclusividadJ1, puntajeJ2, multiplicadoresJ2, exclusividadJ2)
}

class ListaDeExclusividades {
    -exclusividades
    +aplicarExclusividades(puntaje1, puntaje2)
}

class ListaDeMultiplicadores {
    -multiplicadores
    +aplicarMultiplicadores (unPuntaje)
}

interface Respuesta {
    +getOpcionesSeleccionadas();
    +getOpcionSeleccionada();
    +getOpcionesSeleccionadasGrupoA();
    +getOpcionesSeleccionadasGrupoB();
}

class Puntaje {
    -puntos
    +sumarPuntos (unPuntaje)
    +multiplicarPuntos (unPuntaje)
}

Jugador " 2" <- Kahoot
Kahoot .> Pregunta
Respuesta "2      " <-- Kahoot

Kahoot ..> BonusDePuntaje
Kahoot ..> Puntaje

ListaDeExclusividades "2  "<-- Kahoot
ListaDeMultiplicadores "2   "<-- Kahoot

@enduml